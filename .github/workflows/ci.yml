name: CI/CD - Continuous integration and deployment settings

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint code
        run: |
          flake8 .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          if [ -f pytest.ini ] || [ -d tests ] || ls *_test.py 1> /dev/null 2>&1; then pytest; else echo "No tests found"; fi

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build
        run: |
          echo "Build step placeholder"
          # For example, build static assets, compile extensions, etc.

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Vercel Deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod"
          # Uncomment and set these if your project requires:
          # vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          # vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          # working-directory: .
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
